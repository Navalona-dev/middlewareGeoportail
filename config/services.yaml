# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    base_url: 'https://resources.geo-infrastructure-mg.com'
    pathImageEducation: '/home/qgis/projects/saisie/media/upload/ec_ecole/t_ec_01_infrastructure/'
    pathForNamePhotoEducation: 'media/upload/ec_ecole/t_ec_01_infrastructure/'
    pathImageRoute: '/home/qgis/projects/saisie/media/upload/ro_route/t_ro_01_infrastructure/'
    pathForNamePhotoRoute: 'media/upload/ro_route/t_ro_01_infrastructure/'
    pathPublic: '/images/infrastructures/'
    pathImageDalot: '/home/qgis/projects/saisie/media/upload/dar_dalot_route/t_dar_01_infrastructure/'
    pathForNamePhotoDalot: 'media/upload/dar_dalot_route/t_dar_01_infrastructure/'
    pathImagePont: '/home/qgis/projects/saisie/media/upload/pnr_pont_route/t_pnr_01_infrastructure/'
    pathForNamePhotoPont: 'media/upload/pnr_pont_route/t_pnr_01_infrastructure/'
    pathImageGareroutiere: '/home/qgis/projects/saisie/media/upload/gr_gare_routiere/t_gr_01_infrastructure/'
    pathForNamePhotoGareroutiere: 'media/upload/gr_gare_routiere/t_gr_01_infrastructure/'
    pathImageTrajetroute: '/home/qgis/projects/saisie/media/upload/tj_trajet_route/t_tj_01_infrastructure/'
    pathForNamePhotoTrajetroute: 'media/upload/tj_trajet_route/t_tj_01_infrastructure/'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Service\InfrastructureService:
        arguments: ['@security.token_storage', "@doctrine.orm.middleware_entity_manager", '@session', '@infrastructurerepository.service']
        public: true
    infrastructurerepository.service:
        class: App\Repository\InfrastructureRepository
    App\Service\LocalisationInfrastructureService:
        arguments: ['@security.token_storage', "@doctrine.orm.middleware_entity_manager", '@session', '@localisationinfrastructurerepository.service']
        public: true
    localisationinfrastructurerepository.service:
        class: App\Repository\LocalisationInfrastructureRepository
    App\Service\EducationService:
        arguments: ['@security.token_storage', "@doctrine.orm.middleware_entity_manager", '@session', '@educationrepository.service']
        public: true
    educationrepository.service:
        class: App\Repository\EducationRepository
    App\Service\RouteService:
        arguments: ['@security.token_storage', "@doctrine.orm.middleware_entity_manager", '@session', '@routerepository.service']
        public: true
    routerepository.service:
        class: App\Repository\RouteRepository
    App\Service\RefreshTokenService:
        arguments: ['@gesdinet.jwtrefreshtoken.authenticator', "@gesdinet.jwtrefreshtoken.user_provider", '@gesdinet.jwtrefreshtoken.security.authentication.success_handler', '@gesdinet.jwtrefreshtoken.security.authentication.failure_handler', '@gesdinet.jwtrefreshtoken.refresh_token_manager', 360, 'username',false, '@event_dispatcher']
        public: true
    dalotrepository.service:
        class: App\Repository\DalotRepository
    App\Service\DalotService:
        arguments: ['@security.token_storage', "@doctrine.orm.middleware_entity_manager", '@session', '@dalotrepository.service']
        public: true
    pontrepository.service:
        class: App\Repository\PontRepository
    App\Service\PontService:
        arguments: ['@security.token_storage', "@doctrine.orm.middleware_entity_manager", '@session', '@pontrepository.service']
        public: true
    gareroutiererepository.service:
        class: App\Repository\GareroutiereRepository
    App\Service\GareroutiereService:
        arguments: ['@security.token_storage', "@doctrine.orm.middleware_entity_manager", '@session', '@gareroutiererepository.service']
        public: true
    trajetrouterepository.service:
        class: App\Repository\TrajetrouteRepository
    App\Service\TrajetrouteService:
        arguments: ['@security.token_storage', "@doctrine.orm.middleware_entity_manager", '@session', '@trajetrouterepository.service']
        public: true
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
